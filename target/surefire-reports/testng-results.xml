<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
    <line>
      <![CDATA[Chrome Launched]]>
    </line>
    <line>
      <![CDATA[Script Failed]]>
    </line>
    <line>
      <![CDATA[Screenshot has been taken.]]>
    </line>
    <line>
      <![CDATA[Browser is closed]]>
    </line>
    <line>
      <![CDATA[Chrome Launched]]>
    </line>
    <line>
      <![CDATA[Script Passed]]>
    </line>
    <line>
      <![CDATA[Browser is closed]]>
    </line>
    <line>
      <![CDATA[Chrome Launched]]>
    </line>
    <line>
      <![CDATA[Script Failed]]>
    </line>
    <line>
      <![CDATA[Screenshot has been taken.]]>
    </line>
    <line>
      <![CDATA[Browser is closed]]>
    </line>
    <line>
      <![CDATA[Chrome Launched]]>
    </line>
    <line>
      <![CDATA[Script Passed]]>
    </line>
    <line>
      <![CDATA[Browser is closed]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="256278" started-at="2021-07-09T10:02:44Z" finished-at="2021-07-09T10:07:00Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="256278" started-at="2021-07-09T10:02:44Z" finished-at="2021-07-09T10:07:00Z">
      <class name="com.payasia.scripts.LoginTest">
        <test-method status="PASS" signature="setUp1(java.lang.String)[pri:0, instance:com.payasia.scripts.LoginTest@1810399e]" name="setUp1" is-config="true" duration-ms="8567" started-at="2021-07-09T15:32:44Z" finished-at="2021-07-09T15:32:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Chrome Launched]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp1 -->
        <test-method status="FAIL" signature="invalidLoginTest1()[pri:0, instance:com.payasia.scripts.LoginTest@1810399e]" name="invalidLoginTest1" duration-ms="84469" started-at="2021-07-09T15:32:53Z" finished-at="2021-07-09T15:34:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Wait limit exceeded : Logout Button -- Element Not Found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Wait limit exceeded : Logout Button -- Element Not Found.
	at org.junit.Assert.fail(Assert.java:88)
	at com.payasia.generic.ListenerReport.logTestFailSnap(ListenerReport.java:223)
	at com.payasia.generic.FunctionsLib.explicitWaitVisibility(FunctionsLib.java:138)
	at com.payasia.pageobjects.LoginPage.verifyValidLoginMsg(LoginPage.java:79)
	at com.payasia.scripts.LoginTest.invalidLoginTest1(LoginTest.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest1 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.payasia.scripts.LoginTest@1810399e]" name="tearDown" is-config="true" duration-ms="1170" started-at="2021-07-09T15:34:17Z" finished-at="2021-07-09T15:34:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginTest1 status=FAILURE method=LoginTest.invalidLoginTest1()[pri:0, instance:com.payasia.scripts.LoginTest@1810399e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Script Failed]]>
            </line>
            <line>
              <![CDATA[Screenshot has been taken.]]>
            </line>
            <line>
              <![CDATA[Browser is closed]]>
            </line>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp1(java.lang.String)[pri:0, instance:com.payasia.scripts.LoginTest@1810399e]" name="setUp1" is-config="true" duration-ms="6250" started-at="2021-07-09T15:34:18Z" finished-at="2021-07-09T15:34:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Chrome Launched]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp1 -->
        <test-method status="PASS" signature="validLoginTest()[pri:0, instance:com.payasia.scripts.LoginTest@1810399e]" name="validLoginTest" duration-ms="29885" started-at="2021-07-09T15:34:25Z" finished-at="2021-07-09T15:34:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.payasia.scripts.LoginTest@1810399e]" name="tearDown" is-config="true" duration-ms="260" started-at="2021-07-09T15:34:55Z" finished-at="2021-07-09T15:34:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginTest status=SUCCESS method=LoginTest.validLoginTest()[pri:0, instance:com.payasia.scripts.LoginTest@1810399e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Script Passed]]>
            </line>
            <line>
              <![CDATA[Browser is closed]]>
            </line>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.payasia.scripts.LoginTest -->
      <class name="com.payasia.scripts.LoginTest2">
        <test-method status="PASS" signature="setUp1(java.lang.String)[pri:0, instance:com.payasia.scripts.LoginTest2@32d992b2]" name="setUp1" is-config="true" duration-ms="6627" started-at="2021-07-09T15:34:55Z" finished-at="2021-07-09T15:35:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Chrome Launched]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp1 -->
        <test-method status="FAIL" signature="invalidLoginTest1()[pri:0, instance:com.payasia.scripts.LoginTest2@32d992b2]" name="invalidLoginTest1" duration-ms="82361" started-at="2021-07-09T15:35:02Z" finished-at="2021-07-09T15:36:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Wait limit exceeded : Logout Button -- Element Not Found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Wait limit exceeded : Logout Button -- Element Not Found.
	at org.junit.Assert.fail(Assert.java:88)
	at com.payasia.generic.ListenerReport.logTestFailSnap(ListenerReport.java:223)
	at com.payasia.generic.FunctionsLib.explicitWaitVisibility(FunctionsLib.java:138)
	at com.payasia.pageobjects.LoginPage.verifyValidLoginMsg(LoginPage.java:79)
	at com.payasia.scripts.LoginTest2.invalidLoginTest1(LoginTest2.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest1 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.payasia.scripts.LoginTest2@32d992b2]" name="tearDown" is-config="true" duration-ms="457" started-at="2021-07-09T15:36:24Z" finished-at="2021-07-09T15:36:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginTest1 status=FAILURE method=LoginTest2.invalidLoginTest1()[pri:0, instance:com.payasia.scripts.LoginTest2@32d992b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Script Failed]]>
            </line>
            <line>
              <![CDATA[Screenshot has been taken.]]>
            </line>
            <line>
              <![CDATA[Browser is closed]]>
            </line>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp1(java.lang.String)[pri:0, instance:com.payasia.scripts.LoginTest2@32d992b2]" name="setUp1" is-config="true" duration-ms="6416" started-at="2021-07-09T15:36:24Z" finished-at="2021-07-09T15:36:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Chrome Launched]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp1 -->
        <test-method status="PASS" signature="validLoginTest()[pri:0, instance:com.payasia.scripts.LoginTest2@32d992b2]" name="validLoginTest" duration-ms="29010" started-at="2021-07-09T15:36:31Z" finished-at="2021-07-09T15:37:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.payasia.scripts.LoginTest2@32d992b2]" name="tearDown" is-config="true" duration-ms="351" started-at="2021-07-09T15:37:00Z" finished-at="2021-07-09T15:37:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginTest status=SUCCESS method=LoginTest2.validLoginTest()[pri:0, instance:com.payasia.scripts.LoginTest2@32d992b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Script Passed]]>
            </line>
            <line>
              <![CDATA[Browser is closed]]>
            </line>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.payasia.scripts.LoginTest2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
